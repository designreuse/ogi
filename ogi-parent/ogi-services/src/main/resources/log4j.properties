# ***** Set root logger level to WARN and its two appenders to stdout and R.
log4j.rootLogger=info, stdout, SCKT
#Log JDBC bind parameter runtime arguments
log4j.logger.org.hibernate.type.descriptor.sql.BasicBinder=WARN

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#log4j.appender.stdout.layout=org.apache.log4j.TTCCLayout
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%d{ISO8601}] - [%p] - [THREAD %t] - %c[%l] - %m %n
#log4j.appender.stdout.layout.ConversionPattern=[%d{DATE}] - [%p] - [THREAD %t] - %c[%l] - %m %n

#log4j.appender.SCKT=org.apache.log4j.net.SocketAppender
#log4j.appender.SCKT.RemoteHost=192.168.1.37
#log4j.appender.SCKT.Port=50250
#SocketAppenders do not use a layout. They ship a serialized LoggingEvent object to the server side. 


#log4j.appender.R1.layout=org.apache.log4j.PatternLayout
#log4j.appender.R1.layout.ConversionPattern=[%d{DATE}] - [%p] - [THREAD %t] - %c[%l] - %m %n

#[slf5s.THREAD]%n[slf5s.CATEGORY]%n [slf5s.LOCATION]%n%m[slf5s.MESSAGE]%n%n

#%d{DATE} --> Date
#%p       --> Priority (DEBUG, INFO...)
#%n       --> Retour chariot
#%x       -->
#%c       --> Classe d'exécution
#%t       --> Thread
#%np      --> Formatage sur une position de n caractères (ex: %5p => formatage sur 5 caractères)
#%F       --> Fichier
#%L       --> Ligne
#%l       --> Classe src + ligne
#%m       --> Message
#%p %t %c - %m%n
