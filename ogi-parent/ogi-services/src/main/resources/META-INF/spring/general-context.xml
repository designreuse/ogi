<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
			http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
	        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">


	<!-- <context:property-placeholder -->
	<!-- location=" -->
	<!-- classpath:properties/environnement.properties, -->
	<!-- classpath:properties/environnement${environnement}.properties, -->
	<!-- classpath:properties/fonctionnel.properties" -->
	<!-- ignore-resource-not-found="true"/> -->


	<!-- The PropertyPlaceholderConfigurer not only looks for properties in the Properties file you specify. By default it also 
		checks against the Java System properties if it cannot find a property in the specified properties files. You can customize 
		this behavior by setting the systemPropertiesMode property of the configurer with one of the following three supported integer 
		values: -> never (0): Never check system properties -> fallback (1): Check system properties if not resolvable in the specified 
		properties files. This is the default. -> override (2): Check system properties first, before trying the specified properties 
		files. This allows system properties to override any other property source. -->
	<bean class="fr.jerep6.ogi.framework.spring.CryptablePropertyPlaceholderConfigurer">
		<!-- Password is set with -D parameter -DpropertyConfigurerPassword=secret key -->
		<constructor-arg index="0" value="#{systemProperties.propertyConfigurerPassword}" />
		<property name="locations">
			<list>
				<value>classpath:properties/environment.properties</value>
				<value>classpath:properties/functional.properties</value>
			</list>
		</property>

		<!-- Default properties -->
		<property name="properties">
			<value>
			</value>
		</property>

		<property name="ignoreResourceNotFound" value="true" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>

	<context:annotation-config />
	<context:component-scan base-package="
		fr.jerep6.ogi" />
	<aop:aspectj-autoproxy />
	<!-- Support de l'annotation @Cacheable -->
	<cache:annotation-driven cache-manager="cacheManager" />


	<util:map id="mapPartners" map-class="java.util.HashMap">
		<entry key="#{T(fr.jerep6.ogi.enumeration.EnumPartner).ACIMFLO}" value-ref="serviceAcimflo" />
		<entry key="#{T(fr.jerep6.ogi.enumeration.EnumPartner).DIAPORAMA}" value-ref="serviceDiaporama" />
		<entry key="#{T(fr.jerep6.ogi.enumeration.EnumPartner).SE_LOGER}" value-ref="serviceSeLoger" />
		<entry key="#{T(fr.jerep6.ogi.enumeration.EnumPartner).LE_BONCOIN}" value-ref="serviceLeBonCoin" />
	</util:map>

	<util:map id="mapAcimfloUrl">
		<entry key="#{T(fr.jerep6.ogi.service.external.impl.ServiceAcimfloImpl).MODE_SALE}" value-ref="acimfloMapSale" />
		<entry key="#{T(fr.jerep6.ogi.service.external.impl.ServiceAcimfloImpl).MODE_RENT}" value-ref="acimfloMapRent" />
	</util:map>

	<util:map id="acimfloMapSale">
		<entry key="create.url" value="${partner.acimflo.sale.create.url}" />
		<entry key="create.referer" value="${partner.acimflo.sale.create.referer}" />
		<entry key="update.url" value="${partner.acimflo.sale.update.url}" />
		<entry key="update.referer" value="${partner.acimflo.sale.update.referer}" />
		<entry key="apercu.url" value="${partner.acimflo.sale.apercu.url}" />
		<entry key="document.delete.url" value="${partner.acimflo.sale.document.delete.url}" />
	</util:map>

	<util:map id="acimfloMapRent">
		<entry key="create.url" value="${partner.acimflo.rent.create.url}" />
		<entry key="create.referer" value="${partner.acimflo.rent.create.referer}" />
		<entry key="update.url" value="${partner.acimflo.rent.update.url}" />
		<entry key="update.referer" value="${partner.acimflo.rent.update.referer}" />
		<entry key="apercu.url" value="${partner.acimflo.rent.apercu.url}" />
		<entry key="document.delete.url" value="${partner.acimflo.rent.document.delete.url}" />
	</util:map>
	
	<!-- Partner max allowed -->
	<util:map id="mapPartnersMaxAllowed" map-class="java.util.HashMap">
		<entry key="#{T(fr.jerep6.ogi.enumeration.EnumPartner).ACIMFLO}" value="${partner.acimflo.max_allowed}" />
		<entry key="#{T(fr.jerep6.ogi.enumeration.EnumPartner).DIAPORAMA}" value="${partner.diaporama.max_allowed}" />
		<entry key="#{T(fr.jerep6.ogi.enumeration.EnumPartner).SE_LOGER}" value="${partner.seloger.max_allowed}" />
		<entry key="#{T(fr.jerep6.ogi.enumeration.EnumPartner).LE_BONCOIN}" value="${partner.leboncoin.max_allowed}" />
	</util:map>


	<!-- Classe initialisant la redirection java.util.logging vers slf4j -->
	<bean class="fr.jerep6.ogi.framework.log.JULInitializer" />

	<bean id="jobExplorer" class="org.springframework.batch.core.explore.support.JobExplorerFactoryBean">
		<property name="dataSource" ref="dataSource" />
	</bean>


	<!-- Cache -->
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager" p:cache-manager-ref="ehcache" />

	<!-- EhCache library setup -->
	<bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" p:config-location="classpath:ehcache.xml" />


	<bean id="elasticsearch-client" class="fr.jerep6.ogi.framework.spring.ElasticsearchClientFactoryBean" />

</beans>